openapi: 3.0.0
info:
  version: 1.0.0
  title: zhurd
  license:
    name: Apache 2.0
servers:
  - url: http://localhost:3003/v1
paths:
  /printers:
    get:
      summary: List all printers
      operationId: listPrinters
      tags:
        - printers
      responses:
        '200':
          description: An paged array of printers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Printers'
    post:
      summary: Create a printer
      operationId: createPrinter
      tags:
        - printers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePrinter'
      responses:
        '201':
          description: created printer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Printer'
        '400':
          description: Invalid request
  /printers/{printerID}:
    get:
      summary: Info for a specific printer
      operationId: showPrinterByID
      tags:
        - printers
      parameters:
        - name: printerID
          in: path
          required: true
          description: The ID of the printer to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Printer'
        '404':
          description: Not found
    delete:
      summary: delete a specific printer
      operationId: deletePrinterByID
      tags:
        - printers
      parameters:
        - name: printerID
          in: path
          required: true
          description: The ID of the printer to delete
          schema:
            type: string
      responses:
        '204':
          description: No content
  /labels:
    get:
      summary: List all labels
      operationId: listLabels
      tags:
        - labels
      responses:
        '200':
          description: An paged array of lables
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Labels'
    post:
      summary: Create a label
      operationId: createLabel
      tags:
        - labels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLabel'
      responses:
        '201':
          description: created label
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
        '400':
          description: Invalid request
  /labels/{labelID}:
    get:
      summary: Info for a specific label
      operationId: showLabelByID
      tags:
        - labels
      parameters:
        - name: labelID
          in: path
          required: true
          description: The ID of the label to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
        '404':
          description: Not found
    delete:
      summary: delete a specific label
      operationId: deleteLabelByID
      tags:
        - labels
      parameters:
        - name: labelID
          in: path
          required: true
          description: The ID of the label to delete
          schema:
            type: string
      responses:
        '204':
          description: No content
  /labels/{labelID}/enqueue:
    post:
      summary: Enqueue lable to print
      operationId: enqueueLabelToPrint
      tags:
        - labels
      parameters:
        - name: labelID
          in: path
          required: true
          description: The ID of the label to enqueue
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnqueueLabel'
      responses:
        '204':
          description: No content
        '400':
          description: Request error
        '404':
          description: Not found
  /labels/{labelID}/templates:
    get:
      summary: List all tamplates
      operationId: listTemplates
      tags:
        - templates
      parameters:
        - name: labelID
          in: path
          required: true
          description: The ID of the label
          schema:
            type: string
      responses:
        '200':
          description: An paged array of templates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Templates'
        '404':
          description: Not found
    post:
      summary: Create a template
      operationId: createTemplate
      tags:
        - templates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTemplate'
      parameters:
        - name: labelID
          in: path
          required: true
          description: The ID of the label
          schema:
            type: string
      responses:
        '201':
          description: created template
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
        '400':
          description: Invalid request
        '404':
          description: Not found
  /labels/{labelID}/templates/{templateID}:
    get:
      summary: Info for a specific template
      operationId: showTemplateByID
      tags:
        - templates
      parameters:
        - name: labelID
          in: path
          required: true
          description: The ID of the label
          schema:
            type: string
        - name: templateID
          in: path
          required: true
          description: The ID of the template to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
        '404':
          description: Not found
    delete:
      summary: delete a specific template
      operationId: deleteTemplateByID
      tags:
        - templates
      parameters:
        - name: labelID
          in: path
          required: true
          description: The ID of the label
          schema:
            type: string
        - name: templateID
          in: path
          required: true
          description: The ID of the template to delete
          schema:
            type: string
      responses:
        '204':
          description: No content
components:
  schemas:
    CreatePrinter:
      required:
        - addr
        - type
      properties:
        addr:
          type: string
          example: 192.168.0.1:7777
        type:
          type: string
          example: ZPL
        comment:
          type: string
    Printer:
      required:
        - id
        - addr
        - type
      properties:
        id:
          type: integer
          format: int64
          example: 1
        addr:
          type: string
          example: 192.168.0.1:7777
        type:
          type: string
          example: ZPL
        comment:
          type: string
    Printers:
      type: array
      items:
        $ref: '#/components/schemas/Printer'
    CreateLabel:
      required:
        - name
      properties:
        name:
          type: string
          example: label1
        comment:
          type: string
    Label:
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: label1
        comment:
          type: string
    Labels:
      type: array
      items:
        $ref: '#/components/schemas/Label'
    EnqueueLabel:
      required:
        - printer_id
      properties:
        printer_id:
          type: integer
          format: int64
          description: ID of printer to print label
          example: 1
        quantity:
          type: integer
          example: 3
          default: 1
        timeout:
          type: integer
          description: timeout that used to print next document in ms
          example: 5
          default: 0
        placeholders:
          type: array
          items:
            $ref: '#/components/schemas/Placeholder'
    Placeholder:
      required:
        - name
        - value
      properties:
        name:
          type: string
          example: "_comment1_"
        value:
          type: string
          example: "Top section with company logo, name and address."
    CreateTemplate:
      required:
        - type
        - body
      properties:
        type:
          type: string
          example: ZPL
        body:
          type: string
    Template:
      required:
        - id
        - type
        - body
      properties:
        id:
          type: integer
          format: int64
          example: 1
        label_id:
          type: integer
          format: int64
          example: 1
        type:
          type: string
          example: ZPL
        body:
          type: string
          description: content of template encoded into base64
          example: XlhBCl5GWCBUaGlyZCBzZWN0aW9uIHdpdGggYmFyIGNvZGUuCl5CWTUsMiwyNzAKXkZPMTAwLDU1MF5CQ15GRDEyMzQ1Njc4XkZTCl5YWgo=
    Templates:
      type: array
      items:
        $ref: '#/components/schemas/Template'
tags:
  - name: printers
  - name: labels
  - name: templates
